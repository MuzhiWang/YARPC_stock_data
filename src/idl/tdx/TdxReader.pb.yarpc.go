// Code generated by protoc-gen-yarpc-go. DO NOT EDIT.
// source: TdxReader.proto

package tdxreader

import (
	"context"
	"io/ioutil"
	"reflect"

	"github.com/gogo/protobuf/jsonpb"
	"github.com/gogo/protobuf/proto"
	"go.uber.org/fx"
	"go.uber.org/yarpc"
	"go.uber.org/yarpc/api/transport"
	"go.uber.org/yarpc/api/x/restriction"
	"go.uber.org/yarpc/encoding/protobuf"
	"go.uber.org/yarpc/encoding/protobuf/reflection"
)

var _ = ioutil.NopCloser

// TdxReaderYARPCClient is the YARPC client-side interface for the TdxReader service.
type TdxReaderYARPCClient interface {
	Hello(context.Context, *HelloRequest, ...yarpc.CallOption) (*HelloReply, error)
	ReadTdxFile(context.Context, *ReadTdxFileRequest, ...yarpc.CallOption) (*TdxFileData, error)
}

func newTdxReaderYARPCClient(clientConfig transport.ClientConfig, anyResolver jsonpb.AnyResolver, options ...protobuf.ClientOption) TdxReaderYARPCClient {
	return &_TdxReaderYARPCCaller{protobuf.NewStreamClient(
		protobuf.ClientParams{
			ServiceName:  "tdxreader.TdxReader",
			ClientConfig: clientConfig,
			AnyResolver:  anyResolver,
			Options:      options,
		},
	)}

}

// NewTdxReaderYARPCClient builds a new YARPC client for the TdxReader service.
func NewTdxReaderYARPCClient(clientConfig transport.ClientConfig, options ...protobuf.ClientOption) TdxReaderYARPCClient {
	return newTdxReaderYARPCClient(clientConfig, nil, options...)
}

// TdxReaderYARPCServer is the YARPC server-side interface for the TdxReader service.
type TdxReaderYARPCServer interface {
	Hello(context.Context, *HelloRequest) (*HelloReply, error)
	ReadTdxFile(context.Context, *ReadTdxFileRequest) (*TdxFileData, error)
}

type buildTdxReaderYARPCProceduresParams struct {
	Server      TdxReaderYARPCServer
	AnyResolver jsonpb.AnyResolver
}

func buildTdxReaderYARPCProcedures(params buildTdxReaderYARPCProceduresParams) []transport.Procedure {
	handler := &_TdxReaderYARPCHandler{params.Server}
	return protobuf.BuildProcedures(
		protobuf.BuildProceduresParams{
			ServiceName: "tdxreader.TdxReader",
			UnaryHandlerParams: []protobuf.BuildProceduresUnaryHandlerParams{
				{
					MethodName: "Hello",
					Handler: protobuf.NewUnaryHandler(
						protobuf.UnaryHandlerParams{
							Handle:      handler.Hello,
							NewRequest:  newTdxReaderServiceHelloYARPCRequest,
							AnyResolver: params.AnyResolver,
						},
					),
				},
				{
					MethodName: "ReadTdxFile",
					Handler: protobuf.NewUnaryHandler(
						protobuf.UnaryHandlerParams{
							Handle:      handler.ReadTdxFile,
							NewRequest:  newTdxReaderServiceReadTdxFileYARPCRequest,
							AnyResolver: params.AnyResolver,
						},
					),
				},
			},
			OnewayHandlerParams: []protobuf.BuildProceduresOnewayHandlerParams{},
			StreamHandlerParams: []protobuf.BuildProceduresStreamHandlerParams{},
		},
	)
}

// BuildTdxReaderYARPCProcedures prepares an implementation of the TdxReader service for YARPC registration.
func BuildTdxReaderYARPCProcedures(server TdxReaderYARPCServer) []transport.Procedure {
	return buildTdxReaderYARPCProcedures(buildTdxReaderYARPCProceduresParams{Server: server})
}

// FxTdxReaderYARPCClientParams defines the input
// for NewFxTdxReaderYARPCClient. It provides the
// paramaters to get a TdxReaderYARPCClient in an
// Fx application.
type FxTdxReaderYARPCClientParams struct {
	fx.In

	Provider    yarpc.ClientConfig
	AnyResolver jsonpb.AnyResolver
	Restriction restriction.Checker `optional:"true"`
}

// FxTdxReaderYARPCClientResult defines the output
// of NewFxTdxReaderYARPCClient. It provides a
// TdxReaderYARPCClient to an Fx application.
type FxTdxReaderYARPCClientResult struct {
	fx.Out

	Client TdxReaderYARPCClient

	// We are using an fx.Out struct here instead of just returning a client
	// so that we can add more values or add named versions of the client in
	// the future without breaking any existing code.
}

// NewFxTdxReaderYARPCClient provides a TdxReaderYARPCClient
// to an Fx application using the given name for routing.
//
//  fx.Provide(
//    tdxreader.NewFxTdxReaderYARPCClient("service-name"),
//    ...
//  )
func NewFxTdxReaderYARPCClient(name string, options ...protobuf.ClientOption) interface{} {
	return func(params FxTdxReaderYARPCClientParams) FxTdxReaderYARPCClientResult {
		cc := params.Provider.ClientConfig(name)

		if params.Restriction != nil {
			if namer, ok := cc.GetUnaryOutbound().(transport.Namer); ok {
				if err := params.Restriction.Check(protobuf.Encoding, namer.TransportName()); err != nil {
					panic(err.Error())
				}
			}
		}

		return FxTdxReaderYARPCClientResult{
			Client: newTdxReaderYARPCClient(cc, params.AnyResolver, options...),
		}
	}
}

// FxTdxReaderYARPCProceduresParams defines the input
// for NewFxTdxReaderYARPCProcedures. It provides the
// paramaters to get TdxReaderYARPCServer procedures in an
// Fx application.
type FxTdxReaderYARPCProceduresParams struct {
	fx.In

	Server      TdxReaderYARPCServer
	AnyResolver jsonpb.AnyResolver
}

// FxTdxReaderYARPCProceduresResult defines the output
// of NewFxTdxReaderYARPCProcedures. It provides
// TdxReaderYARPCServer procedures to an Fx application.
//
// The procedures are provided to the "yarpcfx" value group.
// Dig 1.2 or newer must be used for this feature to work.
type FxTdxReaderYARPCProceduresResult struct {
	fx.Out

	Procedures     []transport.Procedure
	ReflectionMeta reflection.ServerMeta
}

// NewFxTdxReaderYARPCProcedures provides TdxReaderYARPCServer procedures to an Fx application.
// It expects a TdxReaderYARPCServer to be present in the container.
//
//  fx.Provide(
//    tdxreader.NewFxTdxReaderYARPCProcedures(),
//    ...
//  )
func NewFxTdxReaderYARPCProcedures() interface{} {
	return func(params FxTdxReaderYARPCProceduresParams) FxTdxReaderYARPCProceduresResult {
		return FxTdxReaderYARPCProceduresResult{
			Procedures: buildTdxReaderYARPCProcedures(buildTdxReaderYARPCProceduresParams{
				Server:      params.Server,
				AnyResolver: params.AnyResolver,
			}),
			ReflectionMeta: reflection.ServerMeta{
				ServiceName:     "tdxreader.TdxReader",
				FileDescriptors: yarpcFileDescriptorClosure73ab01b19ef42b00,
			},
		}
	}
}

type _TdxReaderYARPCCaller struct {
	streamClient protobuf.StreamClient
}

func (c *_TdxReaderYARPCCaller) Hello(ctx context.Context, request *HelloRequest, options ...yarpc.CallOption) (*HelloReply, error) {
	responseMessage, err := c.streamClient.Call(ctx, "Hello", request, newTdxReaderServiceHelloYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*HelloReply)
	if !ok {
		return nil, protobuf.CastError(emptyTdxReaderServiceHelloYARPCResponse, responseMessage)
	}
	return response, err
}

func (c *_TdxReaderYARPCCaller) ReadTdxFile(ctx context.Context, request *ReadTdxFileRequest, options ...yarpc.CallOption) (*TdxFileData, error) {
	responseMessage, err := c.streamClient.Call(ctx, "ReadTdxFile", request, newTdxReaderServiceReadTdxFileYARPCResponse, options...)
	if responseMessage == nil {
		return nil, err
	}
	response, ok := responseMessage.(*TdxFileData)
	if !ok {
		return nil, protobuf.CastError(emptyTdxReaderServiceReadTdxFileYARPCResponse, responseMessage)
	}
	return response, err
}

type _TdxReaderYARPCHandler struct {
	server TdxReaderYARPCServer
}

func (h *_TdxReaderYARPCHandler) Hello(ctx context.Context, requestMessage proto.Message) (proto.Message, error) {
	var request *HelloRequest
	var ok bool
	if requestMessage != nil {
		request, ok = requestMessage.(*HelloRequest)
		if !ok {
			return nil, protobuf.CastError(emptyTdxReaderServiceHelloYARPCRequest, requestMessage)
		}
	}
	response, err := h.server.Hello(ctx, request)
	if response == nil {
		return nil, err
	}
	return response, err
}

func (h *_TdxReaderYARPCHandler) ReadTdxFile(ctx context.Context, requestMessage proto.Message) (proto.Message, error) {
	var request *ReadTdxFileRequest
	var ok bool
	if requestMessage != nil {
		request, ok = requestMessage.(*ReadTdxFileRequest)
		if !ok {
			return nil, protobuf.CastError(emptyTdxReaderServiceReadTdxFileYARPCRequest, requestMessage)
		}
	}
	response, err := h.server.ReadTdxFile(ctx, request)
	if response == nil {
		return nil, err
	}
	return response, err
}

func newTdxReaderServiceHelloYARPCRequest() proto.Message {
	return &HelloRequest{}
}

func newTdxReaderServiceHelloYARPCResponse() proto.Message {
	return &HelloReply{}
}

func newTdxReaderServiceReadTdxFileYARPCRequest() proto.Message {
	return &ReadTdxFileRequest{}
}

func newTdxReaderServiceReadTdxFileYARPCResponse() proto.Message {
	return &TdxFileData{}
}

var (
	emptyTdxReaderServiceHelloYARPCRequest        = &HelloRequest{}
	emptyTdxReaderServiceHelloYARPCResponse       = &HelloReply{}
	emptyTdxReaderServiceReadTdxFileYARPCRequest  = &ReadTdxFileRequest{}
	emptyTdxReaderServiceReadTdxFileYARPCResponse = &TdxFileData{}
)

var yarpcFileDescriptorClosure73ab01b19ef42b00 = [][]byte{
	// TdxReader.proto
	[]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x52, 0x4d, 0x6f, 0xd3, 0x40,
		0x10, 0xcd, 0xc6, 0xf9, 0xa8, 0x27, 0xa5, 0x44, 0xa3, 0xb6, 0xac, 0x22, 0x21, 0x45, 0x7b, 0x40,
		0x11, 0x82, 0x1c, 0xc2, 0x01, 0x71, 0xa4, 0x38, 0x11, 0x39, 0x34, 0x44, 0x26, 0x20, 0x38, 0x45,
		0x4b, 0xbc, 0x24, 0x16, 0x6b, 0xaf, 0xb1, 0xd7, 0x34, 0xe5, 0x47, 0xf0, 0x23, 0xb8, 0xf0, 0x37,
		0xd1, 0xae, 0x3f, 0x6a, 0x29, 0xb7, 0x79, 0x6f, 0x9e, 0x67, 0xe7, 0xf9, 0x0d, 0x3c, 0xde, 0x04,
		0x47, 0x5f, 0xf0, 0x40, 0xa4, 0xd3, 0x24, 0x55, 0x5a, 0xa1, 0xab, 0x83, 0x63, 0x6a, 0x09, 0xc6,
		0xe0, 0xfc, 0xbd, 0x90, 0x52, 0xf9, 0xe2, 0x67, 0x2e, 0x32, 0x8d, 0x08, 0x9d, 0x98, 0x47, 0x82,
		0x92, 0x31, 0x99, 0xb8, 0xbe, 0xad, 0xd9, 0x33, 0x80, 0x52, 0x93, 0xc8, 0x7b, 0xa4, 0xd0, 0x8f,
		0x44, 0x96, 0xf1, 0x7d, 0x25, 0xaa, 0x20, 0xdb, 0x02, 0x9a, 0x67, 0x36, 0xc1, 0x71, 0x11, 0x4a,
		0x51, 0x4d, 0x1c, 0xc1, 0xd9, 0xf7, 0x50, 0x8a, 0x35, 0xd7, 0x87, 0xf2, 0x83, 0x1a, 0xe3, 0x4b,
		0xe8, 0x45, 0x42, 0xa7, 0xe1, 0x8e, 0xb6, 0xc7, 0x64, 0x72, 0x31, 0xbb, 0x9a, 0xd6, 0x9b, 0x4d,
		0x3d, 0xae, 0xc5, 0xad, 0x6d, 0xfa, 0xa5, 0x88, 0xfd, 0x23, 0xe0, 0x7e, 0xd4, 0x6a, 0xf7, 0xc3,
		0xe3, 0x9a, 0x9b, 0xc1, 0x01, 0xd7, 0x62, 0x13, 0xd6, 0xeb, 0xd6, 0xd8, 0xd8, 0x50, 0x89, 0x88,
		0xed, 0x58, 0xe2, 0xdb, 0xda, 0x70, 0x87, 0x70, 0x7f, 0xa0, 0x4e, 0xc1, 0x99, 0x1a, 0x87, 0xe0,
		0x48, 0x75, 0x47, 0x3b, 0x96, 0x32, 0x25, 0x5e, 0x42, 0x77, 0x27, 0x55, 0x26, 0x68, 0xd7, 0x72,
		0x05, 0xc0, 0x6b, 0xe8, 0xf1, 0x48, 0xe5, 0xb1, 0xa6, 0x3d, 0x4b, 0x97, 0xc8, 0xf0, 0xbf, 0x94,
		0xcc, 0x23, 0x41, 0xfb, 0x05, 0x5f, 0x20, 0xf6, 0x1a, 0x06, 0xe5, 0x6f, 0xb0, 0xab, 0x4e, 0xa0,
		0x13, 0x70, 0xcd, 0x29, 0x19, 0x3b, 0x93, 0xc1, 0xec, 0xb2, 0xe1, 0xb2, 0xb6, 0xe3, 0x5b, 0xc5,
		0xf3, 0x77, 0x00, 0x0f, 0xc6, 0xf1, 0x11, 0xb8, 0x9f, 0x56, 0xde, 0x7c, 0xb1, 0x5c, 0xcd, 0xbd,
		0x61, 0x0b, 0x07, 0xd0, 0xff, 0xb0, 0x9a, 0x6f, 0x6f, 0x97, 0xab, 0x21, 0xc1, 0x73, 0x38, 0x5b,
		0x2c, 0x3f, 0x17, 0xa8, 0x5d, 0xb5, 0xbc, 0xb7, 0x5f, 0x87, 0xce, 0xec, 0x0f, 0x01, 0xb7, 0xce,
		0x1c, 0xdf, 0x40, 0xd7, 0xc6, 0x87, 0x4f, 0x1a, 0xef, 0x36, 0x43, 0x1f, 0x5d, 0x9d, 0x36, 0x12,
		0x79, 0xcf, 0x5a, 0xb8, 0x80, 0x41, 0x23, 0x51, 0x7c, 0xda, 0xd0, 0x9d, 0x26, 0x3d, 0xba, 0x6e,
		0xb4, 0x1b, 0xee, 0x59, 0xeb, 0xe6, 0x05, 0x60, 0x94, 0xff, 0xbe, 0xe3, 0xf1, 0xde, 0x48, 0xb6,
		0x85, 0xe6, 0xe6, 0xa2, 0xde, 0x71, 0x6d, 0xce, 0x72, 0x4d, 0xfe, 0xb6, 0x9d, 0x8d, 0xf7, 0xe5,
		0x5b, 0xcf, 0x5e, 0xe9, 0xab, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0f, 0x97, 0xce, 0x11, 0xb8,
		0x02, 0x00, 0x00,
	},
}

func init() {
	yarpc.RegisterClientBuilder(
		func(clientConfig transport.ClientConfig, structField reflect.StructField) TdxReaderYARPCClient {
			return NewTdxReaderYARPCClient(clientConfig, protobuf.ClientBuilderOptions(clientConfig, structField)...)
		},
	)
}
